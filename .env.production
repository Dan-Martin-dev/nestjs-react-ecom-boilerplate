# Production Environment Variables Template
# Copy this to .env for production deployment

# ----------------------------------------
# APPLICATION CONFIGURATION
# ----------------------------------------
NODE_ENV=production
PORT=3000
LOG_LEVEL=info

# ----------------------------------------
# DATABASE CONFIGURATION
# ----------------------------------------
# PostgreSQL connection string
DATABASE_URL="postgresql://monorepo-ecom-admin:2SaW8YD31Kl1TFLQbmW0FMHaXgavES1O@db:5432/monorepo-ecom?connection_limit=20&pool_timeout=20"

# Docker Compose Postgres variables
POSTGRES_DB=monorepo-ecom
POSTGRES_USER=monorepo-ecom-admin
POSTGRES_PASSWORD=2SaW8YD31Kl1TFLQbmW0FMHaXgavES1O

# Prisma Database Configuration
PRISMA_SCHEMA_PATH="/app/packages/db/schema.prisma"
PRISMA_MIGRATIONS_PATH="/app/packages/db/migrations"
# Optionally, set PGDATA for custom data directory
# PGDATA=/var/lib/postgresql/data/pgdata

# ----------------------------------------
# REDIS CONFIGURATION
# ----------------------------------------
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_URL="redis://redis:6379"

# ----------------------------------------
# JWT AUTHENTICATION
# ----------------------------------------
# Generate strong secrets:
# openssl rand -base64 64
JWT_SECRET=ea4dfb72334b38a989dd10dfa5cce2e6cdd091a04d2df67fe0053ec5f330a894
JWT_REFRESH_SECRET=b6d67e1c278c9ed1d2ec59ac0215e19bcef4250a871b3dc63c0c5cdb2eaecd3b
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# ----------------------------------------
# SECURITY & ENCRYPTION
# ----------------------------------------
# bcrypt salt rounds (10-12 recommended for production)
BCRYPT_SALT_ROUNDS=12

# ----------------------------------------
# CORS CONFIGURATION
# ----------------------------------------
# Comma-separated list of allowed origins
CORS_ORIGIN=https://yourdomain.com,https://api.yourdomain.com

# ----------------------------------------
# SSL/TLS CONFIGURATION
# ----------------------------------------
# Enable HTTPS redirect when behind proxy (Traefik)
SSL_ENABLED=true

# ----------------------------------------
# MONITORING CONFIGURATION
# ----------------------------------------
# Grafana admin password (change this!)
GRAFANA_PASSWORD=admin
# Prometheus basic auth (format: user:hashed-password)
PROMETHEUS_BASIC_AUTH=admin:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/
# Alert notification channels
NOTIFICATION_EMAIL=admin@example.com
SMTP_USER=alerts@example.com
SMTP_PASS=your_secure_password_here
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/webhook/url

# ----------------------------------------
# EMAIL CONFIGURATION (if needed)
# ----------------------------------------
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# ----------------------------------------
# MONITORING & OBSERVABILITY
# ----------------------------------------
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# ----------------------------------------
# STORAGE CONFIGURATION (if needed)
# ----------------------------------------
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# ----------------------------------------
# PAYMENT CONFIGURATION (if needed)
# ----------------------------------------
# STRIPE_SECRET_KEY=sk_test_...
# STRIPE_WEBHOOK_SECRET=whsec_...
# MERCADO_PAGO_ACCESS_TOKEN=your-mp-token
